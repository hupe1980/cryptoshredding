[tox]
envlist = 
    py{36,37,38,39},
    flake8{,-tests}, pylint{,-tests}

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39, flake8{,-tests}, pylint{,-tests} 

# Additional environments:
#
# dev :: Create dev environment
# black :: Check for "black" issues
# black-fix :: Fix all "black" issues
# build :: Builds source and wheel dist files.
# release :: Builds dist files and uploads to pypi.

[testenv]
deps =
    pytest
    mock
    mongomock
    moto
    pyfakefs

commands = pytest tests {posargs}

# Development
[testenv:dev]
basepython = python3
usedevelop = True
deps =
    {[testenv]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:black-fix]deps}

# Linters
[testenv:flake8]
basepython = python3
deps =
    flake8
commands =
    flake8 \
        cryptoshredding/ \
        setup.py

[testenv:flake8-tests]
basepython = {[testenv:flake8]basepython}
deps = {[testenv:flake8]deps}
commands =
    flake8 \
        # Ignore F811 redefinition errors in tests (breaks with pytest-mock use)
        # Ignore D101-107 docstring requirements for tests
        # E203 is not PEP8 compliant https://github.com/ambv/black#slices
        # W503 is not PEP8 compliant https://github.com/ambv/black#line-breaks--binary-operators
        --ignore F811,D101,D102,D103,D107,E203,W503 \
        tests/

[testenv:pylint]
basepython = python3
deps =
    {[testenv]deps}
    pyflakes
    pylint
commands =
    pylint \
        --rcfile=pylintrc \
        --fail-under=7 \
        cryptoshredding/  \
        setup.py

[testenv:pylint-tests]
basepython = {[testenv:pylint]basepython}
deps = {[testenv:pylint]deps}
commands =
    pylint \
        --rcfile=tests/pylintrc \
        --fail-under=9 \
        tests/ 

[testenv:black-fix]
basepython = python3
deps =
    black
commands =
    black --line-length 120 \
        cryptoshredding/ \
        setup.py \
        tests/ \
        {posargs}

[testenv:black]
basepython = python3
deps =
    {[testenv:black-fix]deps}
commands =
    {[testenv:black-fix]commands} --diff

# Release tooling
[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py sdist bdist_wheel

[testenv:release]
basepython = python3
skip_install = true
deps = 
    {[testenv:build]deps}
    twine
passenv =
    TWINE_PASSWORD
setenv =
    TWINE_USERNAME = {env:TWINE_USERNAME:__token__}
commands =
    {[testenv:build]commands}
    twine upload --skip-existing --repository pypi {toxinidir}/dist/*


